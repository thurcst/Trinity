{"ast":null,"code":"import _objectWithoutProperties from \"/home/arthur/\\xC1rea de Trabalho/trinity/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/arthur/\\xC1rea de Trabalho/trinity/src/routes.js\";\nimport React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { usuario_encontrado } from \"./auth.js\";\nimport { render } from \"./Componentes/Autenticador\";\n\nconst Rota_Privada = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => usuario_encontrado() ? // Se o usuário estiver logado, damos a ele os componentes necessários encontrados em props\n    React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    })) : // Caso não esteja, o enviamos de volta para a tela inicial, com todo o histórico salvo\n    React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nconst Routes = () => React.createElement(BrowserRouter, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Github Search\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: event => {\n      this.setState({\n        github_login: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}), React.createElement(Rota_Privada, {\n  path: \"/app\",\n  component: () => React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Voc\\xEA est\\xE1 logado!\"),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n})));\n\nexport default Routes;","map":{"version":3,"sources":["/home/arthur/Área de Trabalho/trinity/src/routes.js"],"names":["React","BrowserRouter","Route","Switch","Redirect","usuario_encontrado","render","Rota_Privada","Component","component","rest","props","pathname","state","from","location","Routes","event","setState","github_login","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,kBAAvD;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,MAAT,QAAuB,4BAAvB;;AACA,MAAMC,YAAY,GAAG;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAA6BC,IAA7B;;AAAA,SACjB,oBAAC,KAAD,oBACQA,IADR;AAEQ,IAAA,MAAM,EAAEC,KAAK,IACTN,kBAAkB,KAA0C;AACxD,wBAAC,SAAD,oBAAeM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc,GAE8B;AAC5C,wBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAAxB,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADiB;AAAA,CAArB;;AAcA,MAAMC,MAAM,GAAG,MACX,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAD6B,EAE7B;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGC,KAAD,IAAS;AAAC,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAACF,KAAK,CAACG,MAAN,CAAaC;AAA3B,OAAd;AAAiD,KAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF6B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAKI,oBAAC,YAAD;AAAc,EAAA,IAAI,EAAC,MAAnB;AAA0B,EAAA,SAAS,EAAE,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CADJ,CADJ;;AAaA,eAAeL,MAAf","sourcesContent":["import React from \"react\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { usuario_encontrado } from \"./auth.js\";\nimport { render } from \"./Componentes/Autenticador\";\nconst Rota_Privada = ({ component: Component, ... rest}) => (\n    <Route \n        {...rest} \n            render={props =>(\n                usuario_encontrado() ? (                                    // Se o usuário estiver logado, damos a ele os componentes necessários encontrados em props\n                    <Component {...props} />\n                ) : (                                           // Caso não esteja, o enviamos de volta para a tela inicial, com todo o histórico salvo\n                    <Redirect to={{ pathname: '/', state: { from: props.location}}}/>\n                )\n            )\n        }\n    />\n);\n\nconst Routes = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={<div>\n                <h2>Github Search</h2>\n                <input type=\"text\" onChange={(event)=>{this.setState({github_login:event.target.value})}} ></input>\n            </div>} />\n            <Rota_Privada path=\"/app\" component={() => <h1>Você está logado!</h1>}/>\n        </Switch>\n    </BrowserRouter>\n\n);\n\nexport default Routes;"]},"metadata":{},"sourceType":"module"}