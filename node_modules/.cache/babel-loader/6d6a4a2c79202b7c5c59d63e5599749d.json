{"ast":null,"code":"var _jsxFileName = \"/home/arthur/\\xC1rea de Trabalho/Trinity/src/MainMenu.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport './MainMenu.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Routes from './routes';\nexport default class MainMenu extends Component {\n  // Classe do menu principal, contendo todas as funções e roteiros de execução (scripts)\n  constructor(props) {\n    super(props);\n    this.state = {\n      github_login: \"\"\n    };\n    this.autenticar = this.autenticar.bind(this);\n  }\n\n  autenticar() {\n    localStorage.clear();\n    let username = `${this.state.github_login}`;\n    let url = `https://api.github.com/users/${username}`;\n    let url_repos = `https://api.github.com/users/${username}/repos`;\n    fetch(url).then(res => {\n      return res.json();\n    }).then(json => {\n      localStorage.setItem('@Trinity/message', json.message);\n      localStorage.setItem('@Trinity/nome', json.name);\n      localStorage.setItem('@Trinity/usuario', json.login);\n      localStorage.setItem('@Trinity/repositories', json.public_repos);\n      localStorage.setItem('@Trinity/followers', json.followers);\n      localStorage.setItem('@Trinity/location', json.location);\n      localStorage.setItem('@Trinity/avatar', json.avatar_url);\n    });\n    fetch(url_repos).then(res => {\n      return res.json();\n    }).then(json => {\n      let quant_repos = localStorage.getItem('@Trinity/repositories');\n\n      for (let i = 0; i < quant_repos; i++) {\n        localStorage.setItem(`@Trinity/repo${i}`, json[i].name);\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"MainMenu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Github \"), React.createElement(\"h2\", {\n      className: \"second_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" Search \"), React.createElement(\"div\", {\n      className: \"SearchBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"user_input\",\n      type: \"text\",\n      placeholder: \"type your git user\",\n      onChange: event => {\n        this.setState({\n          github_login: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"SearchButton\",\n      onClick: this.autenticar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      className: \"search-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/arthur/Área de Trabalho/Trinity/src/MainMenu.js"],"names":["React","Component","render","FontAwesomeIcon","faSearch","BrowserRouter","Route","Switch","Redirect","Routes","MainMenu","constructor","props","state","github_login","autenticar","bind","localStorage","clear","username","url","url_repos","fetch","then","res","json","setItem","message","name","login","public_repos","followers","location","avatar_url","quant_repos","getItem","i","event","setState","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { render } from 'react-dom';\nimport './MainMenu.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport Routes from './routes'\n\n\nexport default class MainMenu extends Component{\n    // Classe do menu principal, contendo todas as funções e roteiros de execução (scripts)\n    constructor(props){\n        super(props);\n        this.state = {\n            github_login: \"\"\n        }\n        this.autenticar = this.autenticar.bind(this);\n    }\n\n    autenticar(){\n        localStorage.clear();\n        let username    = `${this.state.github_login}`\n        let url         = `https://api.github.com/users/${username}`\n        let url_repos   = `https://api.github.com/users/${username}/repos`\n        fetch(url).then(res=>{return res.json()}).then(\n            json=>{\n                localStorage.setItem('@Trinity/message', json.message);\n                localStorage.setItem('@Trinity/nome', json.name);\n                localStorage.setItem('@Trinity/usuario', json.login);\n                localStorage.setItem('@Trinity/repositories',json.public_repos);\n                localStorage.setItem('@Trinity/followers', json.followers);\n                localStorage.setItem('@Trinity/location',json.location);\n                localStorage.setItem('@Trinity/avatar', json.avatar_url);\n            }\n        )\n        fetch(url_repos).then(res=>{return res.json()}).then(\n            json=>{\n                let quant_repos = localStorage.getItem('@Trinity/repositories');\n                for (let i = 0; i < quant_repos; i++) {\n                    localStorage.setItem(`@Trinity/repo${i}`,json[i].name);\n                    \n                }\n            }\n        )\n    }\n\n    render(){\n        return(\n            <div className = 'MainMenu'>\n                <h1 className = \"title\" > Github </h1>\n                <h2 className = \"second_title\"> Search </h2>\n                <div className = \"SearchBox\">\n                    <input className = \"user_input\" type = \"text\" placeholder = 'type your git user' onChange = {(event)=>{this.setState({github_login:event.target.value})}} />\n                    <button className = 'SearchButton'  onClick = {this.autenticar} > \n                        <FontAwesomeIcon icon   = {faSearch} className  = 'search-btn'/>\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}