{"ast":null,"code":"var _jsxFileName = \"/home/arthur/\\xC1rea de Trabalho/Trinity/src/Repositories.js\";\nimport React, { Component } from 'react';\nexport default class Repositories extends Component {\n  constructor(props) {\n    super(props);\n    var repositories;\n    let repos;\n    this.state = {\n      repositories: localStorage.getItem('@Trinity/repositories'),\n      repos: []\n    };\n  }\n\n  async FetchRepositories() {\n    for (let i = 0; i < this.state.repositories; i++) {\n      this.state.repos[i] = localStorage.getItem(`@Trinity/repo${i}`);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.repos.map(repositorio => React.createElement(\"div\", {\n      key: repositorio.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, repositorio.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, repositorio.forks))));\n  }\n\n}","map":{"version":3,"sources":["/home/arthur/√Årea de Trabalho/Trinity/src/Repositories.js"],"names":["React","Component","Repositories","constructor","props","repositories","repos","state","localStorage","getItem","FetchRepositories","i","render","map","repositorio","id","name","forks"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAEhDE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,QAAIC,YAAJ;AACA,QAAIC,KAAJ;AAEA,SAAKC,KAAL,GAAa;AACTF,MAAAA,YAAY,EAAEG,YAAY,CAACC,OAAb,CAAqB,uBAArB,CADL;AAETH,MAAAA,KAAK,EAAE;AAFE,KAAb;AAIH;;AAED,QAAMI,iBAAN,GAAyB;AACrB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAL,CAAWF,YAA/B,EAA6CM,CAAC,EAA9C,EAAkD;AAC9C,WAAKJ,KAAL,CAAWD,KAAX,CAAiBK,CAAjB,IAAsBH,YAAY,CAACC,OAAb,CAAsB,gBAAeE,CAAE,EAAvC,CAAtB;AAEH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKL,KAAL,CAAWD,KAAX,CAAiBO,GAAjB,CAAqBC,WAAW,IAC7B;AAAK,MAAA,GAAG,EAAEA,WAAW,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,WAAW,CAACE,IAAlB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMF,WAAW,CAACG,KAAlB,CAFJ,CADH,CADL,CADJ;AAUH;;AA/B+C","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Repositories extends Component {\n    \n    constructor(props){\n        super(props);\n        var repositories\n        let repos\n\n        this.state = {\n            repositories: localStorage.getItem('@Trinity/repositories'),\n            repos: []\n        }\n    }\n\n    async FetchRepositories(){\n        for (let i = 0; i < this.state.repositories; i++) {\n            this.state.repos[i] = localStorage.getItem(`@Trinity/repo${i}`);\n            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.repos.map(repositorio=>(\n                    <div key={repositorio.id}>\n                        <div>{repositorio.name}</div>\n                        <div>{repositorio.forks}</div>\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}