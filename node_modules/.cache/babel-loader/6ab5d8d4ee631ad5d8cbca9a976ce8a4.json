{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documentos/NewTrinity/trinity/src/pages/langing.tsx\";\nimport React, { Component, useState } from 'react';\nimport { FiArrowRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport logoImg from \"../images/logo_git.svg\";\nimport '../styles/landing.css';\n\nclass Leide extends Component {\n  constructor(props) {\n    super(props);\n\n    gitlogin: \"\";\n\n    this.autenticar = this.autenticar.bind(this);\n  }\n\n  autenticar() {\n    // Função autenticar envia o username dado pelo usuário para a API do github, recebendo suas informações ou um 'not found' em message\n    localStorage.clear(); // sempre limpar antes de autenticar novamente para não ficar informação de um outro usuário pesquisado\n\n    let username = `${this.gitlogin}`;\n    let url = `https://api.github.com/users/${username}`;\n    let url_repos = `https://api.github.com/users/${username}/repos`;\n    fetch(url).then(res => {\n      return res.json();\n    }).then( // Aqui fazemos o fetch das informações do usuário, recebendo todas as infos importantes\n    json => {\n      localStorage.setItem('@Trinity/message', json.message);\n      localStorage.setItem('@Trinity/nome', json.name);\n      localStorage.setItem('@Trinity/usuario', json.login);\n      localStorage.setItem('@Trinity/repositories', json.public_repos);\n      localStorage.setItem('@Trinity/followers', json.followers);\n      localStorage.setItem('@Trinity/location', json.location);\n      localStorage.setItem('@Trinity/avatar', json.avatar_url);\n    });\n    fetch(url_repos).then(res => {\n      return res.json();\n    }).then(json => {\n      // Aqui armazenamos os repositórios, cada um identificado pelo número 0 a x, de acordo com a quantidade de repositórios.\n      let quant_repos = localStorage.getItem('@Trinity/repositories');\n\n      for (let i = 0; i < quant_repos; i++) {\n        localStorage.setItem(`@Trinity/repo${i}`, json[i].name);\n      }\n    });\n  }\n\n}\n\nfunction Landing() {\n  const [user, setUser] = useState(\"\");\n\n  function handleClick() {\n    let username = `${user}`;\n    let url = `https://api.github.com/users/${username}`;\n    let url_repos = `https://api.github.com/users/${username}/repos`;\n    console.log(username);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"apresentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"logo\",\n    src: logoImg,\n    alt: \"Github icon by Dave Gandy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Github Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"SearchBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"MainMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"embed-submit-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"userInput\",\n    id: \"input\",\n    type: \"text\",\n    placeholder: \"Github User\",\n    onChange: evt => setUser(evt.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/results\",\n    id: \"search-button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }\n  })))))));\n}\n\nexport default Landing;","map":{"version":3,"sources":["/home/arthur/Documentos/NewTrinity/trinity/src/pages/langing.tsx"],"names":["React","Component","useState","FiArrowRight","Link","Leide","constructor","props","gitlogin","autenticar","bind","localStorage","clear","username","url","url_repos","fetch","then","res","json","setItem","message","name","login","public_repos","followers","location","avatar_url","quant_repos","getItem","i","Landing","user","setUser","handleClick","console","log","logoImg","evt","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport {FiArrowRight} from 'react-icons/fi'\nimport {Link} from 'react-router-dom';\n\nimport logoImg from '../images/logo_git.svg'\n\nimport '../styles/landing.css'\n\nclass Leide extends Component{\n  constructor(props){\n    super(props);\n    gitlogin: \"\"\n    this.autenticar = this.autenticar.bind(this);\n\n  }\n  autenticar(){\n    // Função autenticar envia o username dado pelo usuário para a API do github, recebendo suas informações ou um 'not found' em message\n    localStorage.clear(); // sempre limpar antes de autenticar novamente para não ficar informação de um outro usuário pesquisado\n    let username    = `${this.gitlogin}`\n    let url         = `https://api.github.com/users/${username}`\n    let url_repos   = `https://api.github.com/users/${username}/repos`\n    fetch(url).then(res=>{return res.json()}).then(                 // Aqui fazemos o fetch das informações do usuário, recebendo todas as infos importantes\n        json=>{\n            localStorage.setItem('@Trinity/message', json.message);\n            localStorage.setItem('@Trinity/nome', json.name);\n            localStorage.setItem('@Trinity/usuario', json.login);\n            localStorage.setItem('@Trinity/repositories',json.public_repos);\n            localStorage.setItem('@Trinity/followers', json.followers);\n            localStorage.setItem('@Trinity/location',json.location);\n            localStorage.setItem('@Trinity/avatar', json.avatar_url);\n        }\n    )\n    fetch(url_repos).then(res=>{return res.json()}).then(\n        json=>{\n            // Aqui armazenamos os repositórios, cada um identificado pelo número 0 a x, de acordo com a quantidade de repositórios.\n            let quant_repos = localStorage.getItem('@Trinity/repositories');\n            for (let i = 0; i < quant_repos; i++) {\n                localStorage.setItem(`@Trinity/repo${i}`,json[i].name);\n            }\n        }\n    )\n  }\n\n}\n\nfunction Landing(){\n\n  const [user, setUser] = useState(\"\");\n  \n  function handleClick(){\n    let username  = `${user}`\n    let url       = `https://api.github.com/users/${username}`\n    let url_repos = `https://api.github.com/users/${username}/repos`\n\n    console.log(username)\n  }\n  \n  return(\n    \n    <div className=\"App\">\n      <div className=\"apresentation\">\n          <img id = \"logo\" src={logoImg} alt=\"Github icon by Dave Gandy\"/>\n          <h1>Github Search</h1>\n      </div>\n      <div id=\"SearchBar\">\n        <div className = 'MainMenu'>\n          <form action=\"\">\n            <div className =\"embed-submit-field\">\n              <input className = \"userInput\" id= \"input\" type=\"text\" placeholder=\"Github User\" onChange={evt => setUser(evt.target.value)}/>\n              <Link to = \"/results\" id=\"search-button\" onClick={handleClick}>\n                  <FiArrowRight/>\n              </Link>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;"]},"metadata":{},"sourceType":"module"}